//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Grammar/DiscountRules.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="DiscountRulesParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IDiscountRulesListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="DiscountRulesParser.rules"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRules([NotNull] DiscountRulesParser.RulesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DiscountRulesParser.rules"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRules([NotNull] DiscountRulesParser.RulesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DiscountRulesParser.rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRule([NotNull] DiscountRulesParser.RuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DiscountRulesParser.rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRule([NotNull] DiscountRulesParser.RuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DiscountRulesParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondition([NotNull] DiscountRulesParser.ConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DiscountRulesParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondition([NotNull] DiscountRulesParser.ConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DiscountRulesParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAction([NotNull] DiscountRulesParser.ActionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DiscountRulesParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAction([NotNull] DiscountRulesParser.ActionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="DiscountRulesParser.discount"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDiscount([NotNull] DiscountRulesParser.DiscountContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="DiscountRulesParser.discount"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDiscount([NotNull] DiscountRulesParser.DiscountContext context);
}
