//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Grammar/QueryGrammar.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="QueryGrammarParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IQueryGrammarVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryGrammarParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuery([NotNull] QueryGrammarParser.QueryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryGrammarParser.agg_expr_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAgg_expr_list([NotNull] QueryGrammarParser.Agg_expr_listContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryGrammarParser.agg_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAgg_expr([NotNull] QueryGrammarParser.Agg_exprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryGrammarParser.time_related"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTime_related([NotNull] QueryGrammarParser.Time_relatedContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryGrammarParser.offset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOffset([NotNull] QueryGrammarParser.OffsetContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryGrammarParser.where_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhere_expr([NotNull] QueryGrammarParser.Where_exprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryGrammarParser.account_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccount_expr([NotNull] QueryGrammarParser.Account_exprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="QueryGrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] QueryGrammarParser.ExpressionContext context);
}
